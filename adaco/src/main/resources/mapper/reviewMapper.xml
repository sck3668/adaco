<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviewMapper">
	<!-- 작품 리뷰 작성 -->
	<insert id="insert">
	<selectKey keyProperty="rno" resultType="int" order="BEFORE">
		select review_seq.nextval from dual
	</selectKey>
		 insert into review(rno, content, star, write_date, image, artno, username)
		 values(#{rno}, #{content}, #{star}, sysdate, #{image,jdbcType=VARCHAR}, #{artno}, #{username})
	</insert>
	
	<!-- 작품 리뷰 삭제 -->	
	<delete id="delete">
		delete from review where rno=#{rno} and rownum=1
	</delete>	
	
	<!-- 작품 리뷰 페이징/목록보기 -->
	<select id="findAll" resultType="review">
	<![CDATA[
		select*from
			(select rownum as rnum, r.*from
				(select /*+ index_desc(review review_pk_rno) */ rno, content, star, write_date writeDate, image, artno, username
				from review ) r
			where rownum <=#{endRowNum}) 
		where rnum>=#{startRowNum}
		]]>
	</select>
	<!-- 아트번호로 리뷰찾기 -->
	<select id="findAllReview" resultType="review">
		select rno,star,content,write_date writeDate,image,artno,username from review where artno=#{artno} order by write_date desc
	</select>
	
	<!--해당 작품 리뷰 수  -->
	<select id="count" resultType="int">
		select count(*)	from review 
	</select>
	
 	<!-- 작품 리뷰 상세 보기 / 리뷰삭제 위한 -->
	<select id="findById" resultType="review">
		select rno, artno, content, star, write_date writeDate, image, username
		from review
		where rno=#{rno} and rownum=1
	</select>
	<select id="listByReviewOfusername" resultType="user">
		select rno,star,content,image,write_date writeDate,artno,username from user where username=#{username} order by rno desc
	</select>
 </mapper>